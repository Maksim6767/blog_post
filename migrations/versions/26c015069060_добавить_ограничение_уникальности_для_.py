"""Добавить ограничение уникальности для поля title в BlogPost

Revision ID: 26c015069060
Revises: 
Create Date: 2023-09-17 13:56:59.561367

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "26c015069060"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("blog")
    with op.batch_alter_table("blog_post", schema=None) as batch_op:
        batch_op.alter_column(
            "title", existing_type=sa.VARCHAR(length=255), nullable=False
        )
        batch_op.alter_column(
            "body", existing_type=sa.TEXT(), type_=sa.String(length=255), nullable=False
        )
        batch_op.alter_column("user_id", existing_type=sa.INTEGER(), nullable=False)
        batch_op.create_unique_constraint(None, ["title"])
        batch_op.create_foreign_key(None, "users", ["user_id"], ["id"])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("blog_post", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.drop_constraint(None, type_="unique")
        batch_op.alter_column("user_id", existing_type=sa.INTEGER(), nullable=True)
        batch_op.alter_column(
            "body", existing_type=sa.String(length=255), type_=sa.TEXT(), nullable=True
        )
        batch_op.alter_column(
            "title", existing_type=sa.VARCHAR(length=255), nullable=True
        )

    op.create_table(
        "blog",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("title", sa.VARCHAR(length=512), autoincrement=False, nullable=True),
        sa.Column("body", sa.TEXT(), autoincrement=False, nullable=True),
        sa.PrimaryKeyConstraint("id", name="blog_pkey"),
    )
    # ### end Alembic commands ###
